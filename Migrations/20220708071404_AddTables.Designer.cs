// <auto-generated />
using System;
using ADHD.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ADHD.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220708071404_AddTables")]
    partial class AddTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ADHD.Models.DailyMood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Mood")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("DailyMoods");
                });

            modelBuilder.Entity("ADHD.Models.Disorder.Disorder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsDone")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Disorders");
                });

            modelBuilder.Entity("ADHD.Models.Disorder.Option", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Marks")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("ADHD.Models.Disorder.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("QuestionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("ADHD.Models.Disorder.QuestionOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("OptionId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OptionId");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionOption");
                });

            modelBuilder.Entity("ADHD.Models.Disorder.Symptom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("DisorderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDone")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DisorderId");

                    b.ToTable("Symptoms");
                });

            modelBuilder.Entity("ADHD.Models.Disorder.SymptomQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsDone")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("QuestionOptionsId")
                        .HasColumnType("int");

                    b.Property<int>("SymptomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionOptionsId");

                    b.HasIndex("SymptomId");

                    b.ToTable("SymptomQuestions");
                });

            modelBuilder.Entity("ADHD.Models.MoodJournal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("Anger")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("Fear")
                        .HasColumnType("float");

                    b.Property<float>("Joy")
                        .HasColumnType("float");

                    b.Property<float>("Love")
                        .HasColumnType("float");

                    b.Property<string>("Mood")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("Sadness")
                        .HasColumnType("float");

                    b.Property<float>("Surprise")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MoodJournals");
                });

            modelBuilder.Entity("ADHD.Models.Story", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Stories");
                });

            modelBuilder.Entity("ADHD.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("isStudent")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("isVerified")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ADHD.Models.DailyMood", b =>
                {
                    b.HasOne("ADHD.Models.User", "User")
                        .WithMany("DailyMood")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ADHD.Models.Disorder.QuestionOption", b =>
                {
                    b.HasOne("ADHD.Models.Disorder.Option", "Option")
                        .WithMany("QuestionOptions")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ADHD.Models.Disorder.Question", "Question")
                        .WithMany("QuestionOptions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Option");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("ADHD.Models.Disorder.Symptom", b =>
                {
                    b.HasOne("ADHD.Models.Disorder.Disorder", null)
                        .WithMany("Symptoms")
                        .HasForeignKey("DisorderId");
                });

            modelBuilder.Entity("ADHD.Models.Disorder.SymptomQuestion", b =>
                {
                    b.HasOne("ADHD.Models.Disorder.QuestionOption", "QuestionOptions")
                        .WithMany("SymptomQuestions")
                        .HasForeignKey("QuestionOptionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ADHD.Models.Disorder.Symptom", "Symptom")
                        .WithMany("SymptomQuestions")
                        .HasForeignKey("SymptomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuestionOptions");

                    b.Navigation("Symptom");
                });

            modelBuilder.Entity("ADHD.Models.MoodJournal", b =>
                {
                    b.HasOne("ADHD.Models.User", "User")
                        .WithMany("MoodJournal")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ADHD.Models.Story", b =>
                {
                    b.HasOne("ADHD.Models.User", "User")
                        .WithMany("Story")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ADHD.Models.Disorder.Disorder", b =>
                {
                    b.Navigation("Symptoms");
                });

            modelBuilder.Entity("ADHD.Models.Disorder.Option", b =>
                {
                    b.Navigation("QuestionOptions");
                });

            modelBuilder.Entity("ADHD.Models.Disorder.Question", b =>
                {
                    b.Navigation("QuestionOptions");
                });

            modelBuilder.Entity("ADHD.Models.Disorder.QuestionOption", b =>
                {
                    b.Navigation("SymptomQuestions");
                });

            modelBuilder.Entity("ADHD.Models.Disorder.Symptom", b =>
                {
                    b.Navigation("SymptomQuestions");
                });

            modelBuilder.Entity("ADHD.Models.User", b =>
                {
                    b.Navigation("DailyMood");

                    b.Navigation("MoodJournal");

                    b.Navigation("Story");
                });
#pragma warning restore 612, 618
        }
    }
}
